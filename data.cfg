## configuration file.
## all paths are relative to the root package

csvfile:: grades.csv
tables:: 6
seats_per_table:: 5
flagged students (by PID)::
#mysections:: 784952
mysections:: 784952, 784962, 784964, 784957

## The following are the text format of the headers in the csv file.
## this way, the code can positively identify which column corresponds to 
## which quantity
##
##  watch for weird formatting in the csv file itself.  If the heading text has 
##  '$' or ',' anywhere, it may break the program.  
##


id:: Student ID
username:: Username
firstname:: First Name
lastname:: Last Name
section:: SectionNo   [Total Pts: 800000] |87969



## for a certain type of assignment, (ex. a weekly lab report)
## this assumes each similar class of assignments will have identical headings
## save number of the assignments.  What is needed here is assignment name with 
## the number replaced with $. You can add key values here:  if it recurs more 
## than once, simply replace the number in the key with $.  Just be sure name 
## the key using only alphanumeric chars and '_'.  Look to the example for 
## further guidance if necessary.
##
##  keys   ::    what the csv file labels it as...
##
## prelab$:: PreLab$    [Total Pts: 3] 
## quiz$::Lab$Quiz    [Total Pts: 7] 
## inlab$::InLab$    [Total Pts: 5] 
## conclusion$::Lab$Conclusion    [Total Pts: 5]
##
## 


prelab$:: PreLab$    [Total Pts: 3]  |87247
quiz$::Lab$Quiz    [Total Pts: 7]  |87247
inlab$::InLab$   [Total Pts: 5] |87247
conclusion$::Lab$Conclusion       [Total Pts: 5] |87244




